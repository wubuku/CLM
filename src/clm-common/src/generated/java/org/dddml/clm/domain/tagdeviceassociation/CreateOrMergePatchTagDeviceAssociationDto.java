// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.clm.domain.tagdeviceassociation;

import org.dddml.clm.domain.*;
import java.util.Date;

public class CreateOrMergePatchTagDeviceAssociationDto extends AbstractTagDeviceAssociationCommandDto implements TagDeviceAssociationCommand.CreateOrMergePatchTagDeviceAssociation {

    /**
     * Active
     */
    private Boolean active;

    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }


    private Boolean isPropertyActiveRemoved;

    public Boolean getIsPropertyActiveRemoved()
    {
        return this.isPropertyActiveRemoved;
    }

    public void setIsPropertyActiveRemoved(Boolean removed)
    {
        this.isPropertyActiveRemoved = removed;
    }

    public void copyTo(CreateOrMergePatchTagDeviceAssociation command)
    {
        ((AbstractTagDeviceAssociationCommandDto) this).copyTo(command);
        command.setActive(this.getActive());
    }

    public TagDeviceAssociationCommand toCommand()
    {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType())) {
            AbstractTagDeviceAssociationCommand.SimpleCreateTagDeviceAssociation command = new AbstractTagDeviceAssociationCommand.SimpleCreateTagDeviceAssociation();
            copyTo((AbstractTagDeviceAssociationCommand.AbstractCreateTagDeviceAssociation) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            AbstractTagDeviceAssociationCommand.SimpleMergePatchTagDeviceAssociation command = new AbstractTagDeviceAssociationCommand.SimpleMergePatchTagDeviceAssociation();
            copyTo((AbstractTagDeviceAssociationCommand.SimpleMergePatchTagDeviceAssociation) command);
            return command;
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }


    public TagDeviceAssociationCommand toSubclass() {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType()) || null == getCommandType()) {
            CreateTagDeviceAssociationDto command = new CreateTagDeviceAssociationDto();
            copyTo((CreateTagDeviceAssociation) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            MergePatchTagDeviceAssociationDto command = new MergePatchTagDeviceAssociationDto();
            copyTo((MergePatchTagDeviceAssociation) command);
            return command;
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }

    public void copyTo(CreateTagDeviceAssociation command)
    {
        copyTo((CreateOrMergePatchTagDeviceAssociation) command);
    }

    public void copyTo(MergePatchTagDeviceAssociation command)
    {
        copyTo((CreateOrMergePatchTagDeviceAssociation) command);
        command.setIsPropertyActiveRemoved(this.getIsPropertyActiveRemoved());
    }

    public static class CreateTagDeviceAssociationDto extends CreateOrMergePatchTagDeviceAssociationDto implements TagDeviceAssociationCommand.CreateTagDeviceAssociation
    {
        public CreateTagDeviceAssociationDto() {
            this.commandType = COMMAND_TYPE_CREATE;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }
        public TagDeviceAssociationCommand.CreateTagDeviceAssociation toCreateTagDeviceAssociation()
        {
            return (TagDeviceAssociationCommand.CreateTagDeviceAssociation) toCommand();
        }

    }

    public static class MergePatchTagDeviceAssociationDto extends CreateOrMergePatchTagDeviceAssociationDto implements TagDeviceAssociationCommand.MergePatchTagDeviceAssociation
    {
        public MergePatchTagDeviceAssociationDto() {
            this.commandType = COMMAND_TYPE_MERGE_PATCH;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }
        public TagDeviceAssociationCommand.MergePatchTagDeviceAssociation toMergePatchTagDeviceAssociation()
        {
            return (TagDeviceAssociationCommand.MergePatchTagDeviceAssociation) toCommand();
        }

    }

}

