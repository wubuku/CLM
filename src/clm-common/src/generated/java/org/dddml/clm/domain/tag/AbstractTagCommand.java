// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.clm.domain.tag;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.clm.domain.*;
import org.dddml.clm.domain.AbstractCommand;

public abstract class AbstractTagCommand extends AbstractCommand implements TagCommand {

    private String tagId;

    public String getTagId()
    {
        return this.tagId;
    }

    public void setTagId(String tagId)
    {
        this.tagId = tagId;
    }

    private Long version;

    public Long getVersion()
    {
        return this.version;
    }

    public void setVersion(Long version)
    {
        this.version = version;
    }


    public static abstract class AbstractCreateOrMergePatchTag extends AbstractTagCommand implements CreateOrMergePatchTag
    {

        private Integer status;

        public Integer getStatus()
        {
            return this.status;
        }

        public void setStatus(Integer status)
        {
            this.status = status;
        }

        private Boolean active;

        public Boolean getActive()
        {
            return this.active;
        }

        public void setActive(Boolean active)
        {
            this.active = active;
        }

    }

    public static abstract class AbstractCreateTag extends AbstractCreateOrMergePatchTag implements CreateTag
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }

    }

    public static abstract class AbstractMergePatchTag extends AbstractCreateOrMergePatchTag implements MergePatchTag
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }

        private Boolean isPropertyStatusRemoved;

        public Boolean getIsPropertyStatusRemoved()
        {
            return this.isPropertyStatusRemoved;
        }

        public void setIsPropertyStatusRemoved(Boolean removed)
        {
            this.isPropertyStatusRemoved = removed;
        }

        private Boolean isPropertyActiveRemoved;

        public Boolean getIsPropertyActiveRemoved()
        {
            return this.isPropertyActiveRemoved;
        }

        public void setIsPropertyActiveRemoved(Boolean removed)
        {
            this.isPropertyActiveRemoved = removed;
        }


    }

    public static class SimpleCreateTag extends AbstractCreateTag
    {
    }

    
    public static class SimpleMergePatchTag extends AbstractMergePatchTag
    {
    }

    
    public static class SimpleDeleteTag extends AbstractTagCommand implements DeleteTag
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_DELETE;
        }
    }

    

}

