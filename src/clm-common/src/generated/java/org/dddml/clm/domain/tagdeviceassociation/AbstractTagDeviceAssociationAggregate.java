// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.clm.domain.tagdeviceassociation;

import java.util.*;
import org.dddml.clm.domain.*;
import java.time.OffsetDateTime;
import org.dddml.clm.specialization.*;

public abstract class AbstractTagDeviceAssociationAggregate extends AbstractAggregate implements TagDeviceAssociationAggregate {
    private TagDeviceAssociationState.MutableTagDeviceAssociationState state;

    private List<Event> changes = new ArrayList<Event>();

    public AbstractTagDeviceAssociationAggregate(TagDeviceAssociationState state) {
        this.state = (TagDeviceAssociationState.MutableTagDeviceAssociationState)state;
    }

    public TagDeviceAssociationState getState() {
        return this.state;
    }

    public List<Event> getChanges() {
        return this.changes;
    }

    public void create(TagDeviceAssociationCommand.CreateTagDeviceAssociation c) {
        if (c.getVersion() == null) { c.setVersion(TagDeviceAssociationState.VERSION_NULL); }
        TagDeviceAssociationEvent e = map(c);
        apply(e);
    }

    public void mergePatch(TagDeviceAssociationCommand.MergePatchTagDeviceAssociation c) {
        TagDeviceAssociationEvent e = map(c);
        apply(e);
    }

    public void delete(TagDeviceAssociationCommand.DeleteTagDeviceAssociation c) {
        TagDeviceAssociationEvent e = map(c);
        apply(e);
    }

    public void throwOnInvalidStateTransition(Command c) {
        TagDeviceAssociationCommand.throwOnInvalidStateTransition(this.state, c);
    }

    protected void apply(Event e) {
        onApplying(e);
        state.mutate(e);
        changes.add(e);
    }

    protected TagDeviceAssociationEvent map(TagDeviceAssociationCommand.CreateTagDeviceAssociation c) {
        TagDeviceAssociationEventId stateEventId = new TagDeviceAssociationEventId(c.getTagDeviceAssociationId(), c.getVersion());
        TagDeviceAssociationEvent.TagDeviceAssociationStateCreated e = newTagDeviceAssociationStateCreated(stateEventId);
        e.setActive(c.getActive());
        ((AbstractTagDeviceAssociationEvent)e).setCommandId(c.getCommandId());
        e.setCreatedBy(c.getRequesterId());
        e.setCreatedAt((OffsetDateTime)ApplicationContext.current.getTimestampService().now(OffsetDateTime.class));
        return e;
    }

    protected TagDeviceAssociationEvent map(TagDeviceAssociationCommand.MergePatchTagDeviceAssociation c) {
        TagDeviceAssociationEventId stateEventId = new TagDeviceAssociationEventId(c.getTagDeviceAssociationId(), c.getVersion());
        TagDeviceAssociationEvent.TagDeviceAssociationStateMergePatched e = newTagDeviceAssociationStateMergePatched(stateEventId);
        e.setActive(c.getActive());
        e.setIsPropertyActiveRemoved(c.getIsPropertyActiveRemoved());
        ((AbstractTagDeviceAssociationEvent)e).setCommandId(c.getCommandId());
        e.setCreatedBy(c.getRequesterId());
        e.setCreatedAt((OffsetDateTime)ApplicationContext.current.getTimestampService().now(OffsetDateTime.class));
        return e;
    }

    protected TagDeviceAssociationEvent map(TagDeviceAssociationCommand.DeleteTagDeviceAssociation c) {
        TagDeviceAssociationEventId stateEventId = new TagDeviceAssociationEventId(c.getTagDeviceAssociationId(), c.getVersion());
        TagDeviceAssociationEvent.TagDeviceAssociationStateDeleted e = newTagDeviceAssociationStateDeleted(stateEventId);
        ((AbstractTagDeviceAssociationEvent)e).setCommandId(c.getCommandId());
        e.setCreatedBy(c.getRequesterId());
        e.setCreatedAt((OffsetDateTime)ApplicationContext.current.getTimestampService().now(OffsetDateTime.class));
        return e;
    }


    ////////////////////////

    protected TagDeviceAssociationEvent.TagDeviceAssociationStateCreated newTagDeviceAssociationStateCreated(Long version, String commandId, String requesterId) {
        TagDeviceAssociationEventId stateEventId = new TagDeviceAssociationEventId(this.state.getTagDeviceAssociationId(), version);
        TagDeviceAssociationEvent.TagDeviceAssociationStateCreated e = newTagDeviceAssociationStateCreated(stateEventId);
        ((AbstractTagDeviceAssociationEvent)e).setCommandId(commandId);
        e.setCreatedBy(requesterId);
        e.setCreatedAt((OffsetDateTime)ApplicationContext.current.getTimestampService().now(OffsetDateTime.class));
        return e;
    }

    protected TagDeviceAssociationEvent.TagDeviceAssociationStateMergePatched newTagDeviceAssociationStateMergePatched(Long version, String commandId, String requesterId) {
        TagDeviceAssociationEventId stateEventId = new TagDeviceAssociationEventId(this.state.getTagDeviceAssociationId(), version);
        TagDeviceAssociationEvent.TagDeviceAssociationStateMergePatched e = newTagDeviceAssociationStateMergePatched(stateEventId);
        ((AbstractTagDeviceAssociationEvent)e).setCommandId(commandId);
        e.setCreatedBy(requesterId);
        e.setCreatedAt((OffsetDateTime)ApplicationContext.current.getTimestampService().now(OffsetDateTime.class));
        return e;
    }

    protected TagDeviceAssociationEvent.TagDeviceAssociationStateDeleted newTagDeviceAssociationStateDeleted(Long version, String commandId, String requesterId) {
        TagDeviceAssociationEventId stateEventId = new TagDeviceAssociationEventId(this.state.getTagDeviceAssociationId(), version);
        TagDeviceAssociationEvent.TagDeviceAssociationStateDeleted e = newTagDeviceAssociationStateDeleted(stateEventId);
        ((AbstractTagDeviceAssociationEvent)e).setCommandId(commandId);
        e.setCreatedBy(requesterId);
        e.setCreatedAt((OffsetDateTime)ApplicationContext.current.getTimestampService().now(OffsetDateTime.class));
        return e;
    }

    protected TagDeviceAssociationEvent.TagDeviceAssociationStateCreated newTagDeviceAssociationStateCreated(TagDeviceAssociationEventId stateEventId) {
        return new AbstractTagDeviceAssociationEvent.SimpleTagDeviceAssociationStateCreated(stateEventId);
    }

    protected TagDeviceAssociationEvent.TagDeviceAssociationStateMergePatched newTagDeviceAssociationStateMergePatched(TagDeviceAssociationEventId stateEventId) {
        return new AbstractTagDeviceAssociationEvent.SimpleTagDeviceAssociationStateMergePatched(stateEventId);
    }

    protected TagDeviceAssociationEvent.TagDeviceAssociationStateDeleted newTagDeviceAssociationStateDeleted(TagDeviceAssociationEventId stateEventId) {
        return new AbstractTagDeviceAssociationEvent.SimpleTagDeviceAssociationStateDeleted(stateEventId);
    }


    public static class SimpleTagDeviceAssociationAggregate extends AbstractTagDeviceAssociationAggregate {
        public SimpleTagDeviceAssociationAggregate(TagDeviceAssociationState state) {
            super(state);
        }

    }

}

