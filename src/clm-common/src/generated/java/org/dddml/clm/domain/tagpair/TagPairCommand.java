// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.clm.domain.tagpair;

import java.util.*;
import org.dddml.clm.domain.*;
import java.time.OffsetDateTime;
import org.dddml.clm.domain.Command;
import org.dddml.clm.specialization.DomainError;

public interface TagPairCommand extends Command {

    TagIdPair getTagPairId();

    void setTagPairId(TagIdPair tagPairId);

    Long getVersion();

    void setVersion(Long version);

    static void throwOnInvalidStateTransition(TagPairState state, Command c) {
        if (state.getVersion() == null) {
            if (isCommandCreate((TagPairCommand)c)) {
                return;
            }
            throw DomainError.named("premature", "Can't do anything to unexistent aggregate");
        }
        if (state.getDeleted() != null && state.getDeleted()) {
            throw DomainError.named("zombie", "Can't do anything to deleted aggregate.");
        }
        if (isCommandCreate((TagPairCommand)c))
            throw DomainError.named("rebirth", "Can't create aggregate that already exists");
    }

    static boolean isCommandCreate(TagPairCommand c) {
        if ((c instanceof TagPairCommand.CreateTagPair) 
            && (COMMAND_TYPE_CREATE.equals(c.getCommandType()) || c.getVersion().equals(TagPairState.VERSION_NULL)))
            return true;
        if ((c instanceof TagPairCommand.MergePatchTagPair))
            return false;
        if ((c instanceof TagPairCommand.DeleteTagPair))
            return false;
        if (c.getVersion().equals(TagPairState.VERSION_NULL))
            return true;
        return false;
    }

    interface CreateOrMergePatchTagPair extends TagPairCommand
    {

        String getDescription();

        void setDescription(String description);

        Boolean getActive();

        void setActive(Boolean active);

    }

    interface CreateTagPair extends CreateOrMergePatchTagPair
    {
    }

    interface MergePatchTagPair extends CreateOrMergePatchTagPair
    {
        Boolean getIsPropertyDescriptionRemoved();

        void setIsPropertyDescriptionRemoved(Boolean removed);

        Boolean getIsPropertyActiveRemoved();

        void setIsPropertyActiveRemoved(Boolean removed);


    }

    interface DeleteTagPair extends TagPairCommand
    {
    }

}

