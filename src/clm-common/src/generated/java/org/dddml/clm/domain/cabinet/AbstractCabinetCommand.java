// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.clm.domain.cabinet;

import java.util.*;
import java.util.Date;
import org.dddml.clm.domain.*;
import org.dddml.clm.domain.AbstractCommand;

public abstract class AbstractCabinetCommand extends AbstractCommand implements CabinetCommand {

    private String cabinetId;

    public String getCabinetId()
    {
        return this.cabinetId;
    }

    public void setCabinetId(String cabinetId)
    {
        this.cabinetId = cabinetId;
    }

    private Long version;

    public Long getVersion()
    {
        return this.version;
    }

    public void setVersion(Long version)
    {
        this.version = version;
    }


    public static abstract class AbstractCreateOrMergePatchCabinet extends AbstractCabinetCommand implements CreateOrMergePatchCabinet
    {

        private String description;

        public String getDescription()
        {
            return this.description;
        }

        public void setDescription(String description)
        {
            this.description = description;
        }

        private Boolean active;

        public Boolean getActive()
        {
            return this.active;
        }

        public void setActive(Boolean active)
        {
            this.active = active;
        }

    }

    public static abstract class AbstractCreateCabinet extends AbstractCreateOrMergePatchCabinet implements CreateCabinet
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }

    }

    public static abstract class AbstractMergePatchCabinet extends AbstractCreateOrMergePatchCabinet implements MergePatchCabinet
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }

        private Boolean isPropertyDescriptionRemoved;

        public Boolean getIsPropertyDescriptionRemoved()
        {
            return this.isPropertyDescriptionRemoved;
        }

        public void setIsPropertyDescriptionRemoved(Boolean removed)
        {
            this.isPropertyDescriptionRemoved = removed;
        }

        private Boolean isPropertyActiveRemoved;

        public Boolean getIsPropertyActiveRemoved()
        {
            return this.isPropertyActiveRemoved;
        }

        public void setIsPropertyActiveRemoved(Boolean removed)
        {
            this.isPropertyActiveRemoved = removed;
        }


    }

    public static class SimpleCreateCabinet extends AbstractCreateCabinet
    {
    }

    
    public static class SimpleMergePatchCabinet extends AbstractMergePatchCabinet
    {
    }

    
    public static class SimpleDeleteCabinet extends AbstractCabinetCommand implements DeleteCabinet
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_DELETE;
        }
    }

    

}

