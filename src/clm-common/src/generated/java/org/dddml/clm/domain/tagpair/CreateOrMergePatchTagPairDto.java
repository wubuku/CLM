// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.clm.domain.tagpair;

import org.dddml.clm.domain.*;
import java.time.OffsetDateTime;

public class CreateOrMergePatchTagPairDto extends AbstractTagPairCommandDto implements TagPairCommand.CreateOrMergePatchTagPair {

    /**
     * Description
     */
    private String description;

    public String getDescription()
    {
        return this.description;
    }

    public void setDescription(String description)
    {
        this.description = description;
    }

    /**
     * Active
     */
    private Boolean active;

    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }


    private Boolean isPropertyDescriptionRemoved;

    public Boolean getIsPropertyDescriptionRemoved()
    {
        return this.isPropertyDescriptionRemoved;
    }

    public void setIsPropertyDescriptionRemoved(Boolean removed)
    {
        this.isPropertyDescriptionRemoved = removed;
    }

    private Boolean isPropertyActiveRemoved;

    public Boolean getIsPropertyActiveRemoved()
    {
        return this.isPropertyActiveRemoved;
    }

    public void setIsPropertyActiveRemoved(Boolean removed)
    {
        this.isPropertyActiveRemoved = removed;
    }

    public void copyTo(CreateOrMergePatchTagPair command)
    {
        ((AbstractTagPairCommandDto) this).copyTo(command);
        command.setDescription(this.getDescription());
        command.setActive(this.getActive());
    }

    public TagPairCommand toCommand()
    {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType())) {
            AbstractTagPairCommand.SimpleCreateTagPair command = new AbstractTagPairCommand.SimpleCreateTagPair();
            copyTo((AbstractTagPairCommand.AbstractCreateTagPair) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            AbstractTagPairCommand.SimpleMergePatchTagPair command = new AbstractTagPairCommand.SimpleMergePatchTagPair();
            copyTo((AbstractTagPairCommand.SimpleMergePatchTagPair) command);
            return command;
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }


    public TagPairCommand toSubclass() {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType()) || null == getCommandType()) {
            CreateTagPairDto command = new CreateTagPairDto();
            copyTo((CreateTagPair) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            MergePatchTagPairDto command = new MergePatchTagPairDto();
            copyTo((MergePatchTagPair) command);
            return command;
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }

    public void copyTo(CreateTagPair command)
    {
        copyTo((CreateOrMergePatchTagPair) command);
    }

    public void copyTo(MergePatchTagPair command)
    {
        copyTo((CreateOrMergePatchTagPair) command);
        command.setIsPropertyDescriptionRemoved(this.getIsPropertyDescriptionRemoved());
        command.setIsPropertyActiveRemoved(this.getIsPropertyActiveRemoved());
    }

    public static class CreateTagPairDto extends CreateOrMergePatchTagPairDto implements TagPairCommand.CreateTagPair
    {
        public CreateTagPairDto() {
            this.commandType = COMMAND_TYPE_CREATE;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }
        public TagPairCommand.CreateTagPair toCreateTagPair()
        {
            return (TagPairCommand.CreateTagPair) toCommand();
        }

    }

    public static class MergePatchTagPairDto extends CreateOrMergePatchTagPairDto implements TagPairCommand.MergePatchTagPair
    {
        public MergePatchTagPairDto() {
            this.commandType = COMMAND_TYPE_MERGE_PATCH;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }
        public TagPairCommand.MergePatchTagPair toMergePatchTagPair()
        {
            return (TagPairCommand.MergePatchTagPair) toCommand();
        }

    }

}

