// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.clm.domain.device;

import java.util.Date;
import org.dddml.clm.domain.*;

public class CreateOrMergePatchDeviceDto extends AbstractDeviceCommandDto implements DeviceCommand.CreateOrMergePatchDevice {

    /**
     * Cabinet Id
     */
    private String cabinetId;

    public String getCabinetId()
    {
        return this.cabinetId;
    }

    public void setCabinetId(String cabinetId)
    {
        this.cabinetId = cabinetId;
    }

    /**
     * Description
     */
    private String description;

    public String getDescription()
    {
        return this.description;
    }

    public void setDescription(String description)
    {
        this.description = description;
    }

    /**
     * Active
     */
    private Boolean active;

    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }


    private Boolean isPropertyCabinetIdRemoved;

    public Boolean getIsPropertyCabinetIdRemoved()
    {
        return this.isPropertyCabinetIdRemoved;
    }

    public void setIsPropertyCabinetIdRemoved(Boolean removed)
    {
        this.isPropertyCabinetIdRemoved = removed;
    }

    private Boolean isPropertyDescriptionRemoved;

    public Boolean getIsPropertyDescriptionRemoved()
    {
        return this.isPropertyDescriptionRemoved;
    }

    public void setIsPropertyDescriptionRemoved(Boolean removed)
    {
        this.isPropertyDescriptionRemoved = removed;
    }

    private Boolean isPropertyActiveRemoved;

    public Boolean getIsPropertyActiveRemoved()
    {
        return this.isPropertyActiveRemoved;
    }

    public void setIsPropertyActiveRemoved(Boolean removed)
    {
        this.isPropertyActiveRemoved = removed;
    }

    public void copyTo(CreateOrMergePatchDevice command)
    {
        ((AbstractDeviceCommandDto) this).copyTo(command);
        command.setCabinetId(this.getCabinetId());
        command.setDescription(this.getDescription());
        command.setActive(this.getActive());
    }

    public DeviceCommand toCommand()
    {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType())) {
            AbstractDeviceCommand.SimpleCreateDevice command = new AbstractDeviceCommand.SimpleCreateDevice();
            copyTo((AbstractDeviceCommand.AbstractCreateDevice) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            AbstractDeviceCommand.SimpleMergePatchDevice command = new AbstractDeviceCommand.SimpleMergePatchDevice();
            copyTo((AbstractDeviceCommand.SimpleMergePatchDevice) command);
            return command;
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }


    public DeviceCommand toSubclass() {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType()) || null == getCommandType()) {
            CreateDeviceDto command = new CreateDeviceDto();
            copyTo((CreateDevice) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            MergePatchDeviceDto command = new MergePatchDeviceDto();
            copyTo((MergePatchDevice) command);
            return command;
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }

    public void copyTo(CreateDevice command)
    {
        copyTo((CreateOrMergePatchDevice) command);
    }

    public void copyTo(MergePatchDevice command)
    {
        copyTo((CreateOrMergePatchDevice) command);
        command.setIsPropertyCabinetIdRemoved(this.getIsPropertyCabinetIdRemoved());
        command.setIsPropertyDescriptionRemoved(this.getIsPropertyDescriptionRemoved());
        command.setIsPropertyActiveRemoved(this.getIsPropertyActiveRemoved());
    }

    public static class CreateDeviceDto extends CreateOrMergePatchDeviceDto implements DeviceCommand.CreateDevice
    {
        public CreateDeviceDto() {
            this.commandType = COMMAND_TYPE_CREATE;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }
        public DeviceCommand.CreateDevice toCreateDevice()
        {
            return (DeviceCommand.CreateDevice) toCommand();
        }

    }

    public static class MergePatchDeviceDto extends CreateOrMergePatchDeviceDto implements DeviceCommand.MergePatchDevice
    {
        public MergePatchDeviceDto() {
            this.commandType = COMMAND_TYPE_MERGE_PATCH;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }
        public DeviceCommand.MergePatchDevice toMergePatchDevice()
        {
            return (DeviceCommand.MergePatchDevice) toCommand();
        }

    }

}

